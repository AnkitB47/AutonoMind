# --- docker/Dockerfile.cpu ---
# --- Build frontend ---
FROM node:lts AS frontend-builder
WORKDIR /build/webapp
COPY webapp/package*.json ./
RUN npm ci
COPY webapp .
RUN npm run build && npm prune --production

# --- Install python dependencies ---
FROM python:3.10-slim AS python-deps
WORKDIR /deps
COPY requirements-cpu.txt ./
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir faiss-cpu \
    && pip install --no-cache-dir -r requirements-cpu.txt

# --- Final runtime image ---
FROM python:3.10-slim

ARG NEXT_PUBLIC_FASTAPI_URL
ARG NEXT_PUBLIC_STREAMLIT_URL
ENV NEXT_PUBLIC_FASTAPI_URL=${NEXT_PUBLIC_FASTAPI_URL}
ENV NEXT_PUBLIC_STREAMLIT_URL=${NEXT_PUBLIC_STREAMLIT_URL}

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONPATH=/workspace
ENV FAISS_INDEX_PATH=/data/vector.index
WORKDIR /workspace

# 1) Install Node.js runtime
RUN apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends curl && \
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y --no-install-recommends nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 2) Copy Python dependencies from builder stage
COPY --from=python-deps /usr/local /usr/local

# 3) Copy application source
COPY . .

# 4) Copy built frontend
COPY --from=frontend-builder /build/webapp ./webapp

# 5) Ensure FAISS index directory exists
RUN mkdir -p /data

# 6) Expose ports for FastAPI (8000), Streamlit (8080), and webapp preview (3000)
EXPOSE 8000 8080 3000

# 7) Launch FastAPI + Streamlit + webapp preview
CMD bash -c "\
    uvicorn app.main_fastapi:app --host 0.0.0.0 --port 8000 & \
    streamlit run app/main_streamlit.py \
      --server.port=8080 \
      --server.address=0.0.0.0 \
      --server.enableCORS=false \
      --server.enableXsrfProtection=false \
      --server.headless=true & \
    cd webapp && npm start -- -H 0.0.0.0 -p 3000\
"
