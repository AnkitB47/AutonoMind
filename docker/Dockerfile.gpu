# --- docker/Dockerfile.gpu ---
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

# API endpoint for the frontend build
ARG VITE_API_URL=http://localhost:8000
ENV VITE_API_URL=${VITE_API_URL}

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV USE_GPU=True
ENV PYTHONPATH=/workspace
ENV FAISS_INDEX_PATH=/data/vector.index

WORKDIR /workspace

# 1) System dependencies + Node.js
RUN apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends \
        git wget curl \
        python3 python3-pip \
        ffmpeg libsndfile1 libgl1 jq \
        ca-certificates && \
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 2) Python setup
COPY requirements-gpu.txt .
RUN python3 -m pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-gpu.txt

# 3) PyTorch (CUDA 11.8)
RUN pip install torch==2.2.2 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# 4) Copy only frontend package files (leverage cache) and install
COPY frontend/package*.json ./frontend/
RUN cd frontend && npm install && cd ..

# 5) Copy entire repo into image
COPY . .

# 6) Build frontend
RUN cd frontend && npm ci && VITE_API_URL=$VITE_API_URL npm run build && cd ..

# 7) Ensure FAISS index directory exists
RUN mkdir -p /data

# 8) Expose ports for FastAPI (8000), Streamlit (8080), and frontend preview (3000)
EXPOSE 8000 8080 3000

# 9) Launch FastAPI + Streamlit + frontend preview
CMD ["bash", "-c", "\
    uvicorn app.main_fastapi:app --host 0.0.0.0 --port 8000 & \
    streamlit run app/main_streamlit.py \
      --server.port=8080 \
      --server.address=0.0.0.0 \
      --server.enableCORS=false \
      --server.enableXsrfProtection=false \
      --server.headless=true & \
    cd frontend && npm run preview -- --host 0.0.0.0 --port 3000\
"]
