# --- docker/Dockerfile.gpu ---

# --- Build frontend ---
FROM node:lts AS frontend-builder
WORKDIR /build/webapp
ARG MIN_CONFIDENCE
ARG NEXT_PUBLIC_FASTAPI_URL=http://localhost:8000
ENV MIN_CONFIDENCE=${MIN_CONFIDENCE}
ENV NEXT_PUBLIC_FASTAPI_URL=${NEXT_PUBLIC_FASTAPI_URL}
ENV NPM_CONFIG_FETCH_RETRIES=5 \
    NPM_CONFIG_FETCH_RETRY_MINTIMEOUT=10000 \
    NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT=60000
COPY webapp/package*.json ./
RUN npm ci --no-audit --prefer-offline
COPY webapp .
RUN npm run build && npm prune --production

# --- Install python dependencies ---
FROM python:3.10-slim AS python-deps
WORKDIR /deps
COPY requirements-gpu.txt ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir --use-pep517 -r requirements-gpu.txt \
    && pip install --no-cache-dir torch==2.2.2 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# --- Final runtime image ---
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

ARG MIN_CONFIDENCE
ARG NEXT_PUBLIC_FASTAPI_URL
ENV MIN_CONFIDENCE=${MIN_CONFIDENCE}
ENV NEXT_PUBLIC_FASTAPI_URL=${NEXT_PUBLIC_FASTAPI_URL}

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV USE_GPU=True
ENV PYTHONPATH=/workspace
ENV FAISS_INDEX_PATH=/data/vector.index
ENV NODE_ENV=production
WORKDIR /workspace

# 1) System packages and Node runtime
RUN apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends \
        git wget curl \
        python3 python3-pip \
        ffmpeg libsndfile1 libgl1 jq \
        ca-certificates && \
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y --no-install-recommends nodejs && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# 2) Copy Python dependencies
COPY --from=python-deps /usr/local /usr/local

# 3) Copy application source
COPY . .
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# 4) Copy built frontend
COPY --from=frontend-builder /build/webapp ./webapp

# 5) Ensure FAISS index directory exists
RUN mkdir -p /data

# 6) Expose ports for FastAPI (8000) and Next.js (3000)
EXPOSE 8000 3000

# 7) Launch FastAPI + Next.js via entrypoint script
CMD ["/entrypoint.sh"]
