# --- .github/workflows/deploy-runpod.yml ---
name: 🚀 CI/CD - Deploy GPU Agent to RunPod

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy-gpu:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠 Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: 🧱 Build & Push GPU Docker Image
        run: |
          docker build -f docker/Dockerfile.gpu -t ghcr.io/${{ secrets.GHCR_USER }}/autonomind-gpu:latest .
          docker push ghcr.io/${{ secrets.GHCR_USER }}/autonomind-gpu:latest

      - name: 🚀 Launch RunPod GPU Instance from Template
        id: launch
        run: |
          response=$(curl -s -X POST https://api.runpod.io/v2/uhqe2m9jvy/run \
            -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{}')

          echo "Launch response: $response"
          pod_id=$(echo "$response" | jq -r '.id')
          echo "RUNPOD_POD_ID=$pod_id" >> $GITHUB_ENV

      - name: 🔄 Poll for RunPod Readiness & Store Endpoint
        run: |
          for i in {1..30}; do
            status_response=$(curl -s -X POST https://api.runpod.io/status \
              -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d "{\"id\": \"${{ env.RUNPOD_POD_ID }}\"}")
            
            status=$(echo "$status_response" | jq -r '.status')
            echo "⏳ Pod status: $status"

            if [ "$status" = "RUNNING" ]; then
              url=$(echo "$status_response" | jq -r '.endpoint')
              echo "✅ Live RunPod URL: $url"
              echo "RUNPOD_URL=$url" >> $GITHUB_ENV
              gh secret set RUNPOD_URL -b"$url"
              break
            fi

            sleep 10
          done
