name: üöÄ CI/CD - Deploy GPU Agent to RunPod (runpodctl)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy-gpu:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout Repo
        uses: actions/checkout@v3

      - name: üê≥ Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: üîê Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: üß± Build & Push GPU Docker Image
        run: |
          docker build -f docker/Dockerfile.gpu -t ghcr.io/${{ secrets.GHCRL_USER }}/autonomind-gpu:latest .
          docker push ghcr.io/${{ secrets.GHCRL_USER }}/autonomind-gpu:latest

      - name: üõ† Install runpodctl CLI
        run: |
          wget -q https://github.com/Run-Pod/runpodctl/releases/download/v1.14.3/runpodctl-linux-amd64 -O runpodctl
          chmod +x runpodctl
          sudo mv runpodctl /usr/bin/runpodctl

      - name: üîê Authenticate with RunPod
        run: runpodctl config --apiKey ${{ secrets.RUNPOD_API_KEY }}

      - name: üöÄ Launch GPU Pod from Template
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
        run: |
          UNIQUE_POD_NAME="github-actions-pod-${{ github.run_id }}"
          echo "Launching Pod: $UNIQUE_POD_NAME"
          runpodctl create pod \
            --templateId uhqe2m9jvy \
            --name "$UNIQUE_POD_NAME" \
            --gpuType "NVIDIA GeForce RTX 3090" \
            --gpuCount 1 \
            --imageName "ghcr.io/${GHCRL_USER}/autonomind-gpu:latest" \
            --ports "8080/http" \
            --volumePath "/runpod" \
            --containerDiskSize 20 \
            --volumeSize 1 \
            --mem 30 \
            --vcpu 8 \
            --cost 0.22

      - name: üîÑ Wait for Pod to Start & Save Public URL
        id: poll
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
        run: |
          POD_NAME="github-actions-pod-${{ github.run_id }}"
          echo "Polling for Pod ID and Public IP..."

          for i in {1..30}; do
            POD_JSON=$(runpodctl get pod --output json)
            POD_ID=$(echo "$POD_JSON" | jq -r --arg name "$POD_NAME" '.[] | select(.name==$name) | .id')

            if [ -n "$POD_ID" ] && [ "$POD_ID" != "null" ]; then
              STATUS_JSON=$(runpodctl get pod "$POD_ID" --output json)
              STATUS=$(echo "$STATUS_JSON" | jq -r '.status')
              echo "‚è≥ Pod status: $STATUS"

              if [ "$STATUS" = "RUNNING" ]; then
                PUBLIC_IP=$(echo "$STATUS_JSON" | jq -r '.publicIp')
                if [ -n "$PUBLIC_IP" ] && [ "$PUBLIC_IP" != "null" ]; then
                  echo "‚úÖ Pod is live: http://$PUBLIC_IP:8080"
                  echo "RUNPOD_URL=http://$PUBLIC_IP:8080" >> $GITHUB_ENV
                  export POD_URL="http://$PUBLIC_IP:8080"
                  break
                fi
              fi
            fi
            sleep 10
          done

          if [ -z "$PUBLIC_IP" ] || [ "$PUBLIC_IP" = "null" ]; then
            echo "‚ùå Pod failed to start or no public IP assigned."
            exit 1
          fi

      - name: üîê Store Pod URL as GitHub Secret
        run: gh secret set RUNPOD_URL --body "$POD_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POD_URL: ${{ env.RUNPOD_URL }}
