name: 🚀 CI/CD - Deploy GPU Agent to RunPod

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy-gpu:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: 🧱 Build & Push GPU Docker Image
        run: |
          docker build -f docker/Dockerfile.gpu -t ghcr.io/${{ secrets.GHCR_USER }}/autonomind-gpu:latest .
          docker push ghcr.io/${{ secrets.GHCR_USER }}/autonomind-gpu:latest

      - name: 📥 Install runpodctl
        run: |
          wget -q https://github.com/Run-Pod/runpodctl/releases/download/v1.14.3/runpodctl-linux-amd64 -O runpodctl
          chmod +x runpodctl
          sudo mv runpodctl /usr/bin/runpodctl

      - name: 🔐 Configure runpodctl with API key
        run: runpodctl config --apiKey ${{ secrets.RUNPOD_API_KEY }}

      - name: 🚀 Launch Pod from Template
        run: |
          runpodctl create pod --templateId uhqe2m9jvy --name github-actions-pod

      - name: 🔄 Wait for Pod to be Ready & Capture URL
        id: poll
        run: |
          POD_ID=$(runpodctl get pods --name github-actions-pod --output json | jq -r '.[0].id')

          for i in {1..30}; do
            STATUS=$(runpodctl get pod "$POD_ID" --output json | jq -r '.status')
            echo "⏳ Pod status: $STATUS"

            if [ "$STATUS" = "RUNNING" ]; then
              PUBLIC_IP=$(runpodctl get pod "$POD_ID" --output json | jq -r '.publicIp')
              if [[ -n "$PUBLIC_IP" && "$PUBLIC_IP" != "null" ]]; then
                echo "✅ Pod IP: $PUBLIC_IP"
                echo "POD_URL=http://$PUBLIC_IP:8080" >> $GITHUB_ENV
                break
              fi
            fi

            sleep 10
          done

      - name: 🔒 Store Pod URL as GitHub Secret
        run: |
          gh secret set RUNPOD_URL --body "$POD_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POD_URL: ${{ env.POD_URL }}
